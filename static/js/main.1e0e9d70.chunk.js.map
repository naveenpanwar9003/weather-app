{"version":3,"sources":["Components/Statefull/Form/Form.js","Components/Stateless/CardHeader/CardHeader.js","Components/Stateless/ImgLoader/ImgLoader.js","Components/Stateless/WeatherContainer/WeatherContainer.js","Components/Stateless/CordinatesContainer/CordinatesContainer.js","Components/Stateless/WindContainer/WindContainer.js","Components/Stateless/Error/Error.js","Components/Stateless/MainContainer/MainContainer.js","App.js","index.js"],"names":["Form","handleChange","inputValue","onSubmit","getResultPending","className","type","placeholder","onChange","e","onKeyUp","key","value","onClick","disabled","CardHeader","title","ImgLoader","WeatherContainer","resultData","imgPath","useState","isImageloaded","setisImageloaded","src","alt","style","display","onLoad","main","temp","name","sys","country","pressure","humidity","visibility","CordinatesContainer","props","cordinates","lon","lat","WindContainer","wind","speed","deg","Error","error","MainContainer","result","setResult","setInputValue","seterror","setImgPath","setgetResultPending","target","getResult","a","api","fetch","response","ok","statusText","json","data","imageCode","weather","icon","coord","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e0e9d70.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./form.css\";\n\nconst Form = ({ handleChange, inputValue, onSubmit, getResultPending }) => {\n  return (\n    <div className='card form-card'>\n      <div className='form-container'>\n        <label>Enter Your City Name</label>\n        <div className='form-row'>\n          <input\n            type='text'\n            placeholder='City Name'\n            onChange={(e) => {\n              handleChange(e);\n            }}\n            onKeyUp={(e) => (e.key === \"Enter\" ? onSubmit() : false)}\n            value={inputValue}\n            className='input'\n          />\n          <button\n            type='submit'\n            className='form-btn'\n            onClick={onSubmit}\n            disabled={getResultPending ? \"disable\" : \"\"}\n          >\n            Search\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport \"./card-header.css\";\n\nconst CardHeader = ({ title }) => {\n  return (\n    <div className='card-header-wrapper'>\n      <h2 className='card-header'>{title}</h2>\n    </div>\n  );\n};\n\nexport default CardHeader;\n","import \"./imgloader.css\";\n\nexport default function ImgLoader() {\n  return (\n    <div className='loader-container'>\n      <span className='loader'></span>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport CardHeader from \"../CardHeader/CardHeader\";\nimport ImgLoader from \"../ImgLoader/ImgLoader\";\n\nimport \"./weather-container.css\";\n\nconst WeatherContainer = ({ resultData, imgPath }) => {\n  const [isImageloaded, setisImageloaded] = useState(false);\n\n  return (\n    <div className='card'>\n      <CardHeader title='Weather' />\n      <div className='card-content'>\n        <div className='weather-row'>\n          <div className='weather-img'>\n            {!resultData ? setisImageloaded(false) : false}\n            <img\n              src={imgPath}\n              alt='weather'\n              style={{ display: isImageloaded ? \"block\" : \"none\" }}\n              onLoad={() => setisImageloaded(true)}\n            />\n            {isImageloaded ? false : <ImgLoader />}\n          </div>\n          <div className='card-details'>\n            <div className='weather-top'>\n              <span className='temp'>{resultData.main.temp}</span>\n              <span className='metric'>C</span>\n            </div>\n            <div className='weather-bottom'>\n              <p className='location'>{`${resultData.name}, ${resultData.sys.country}`}</p>\n            </div>\n          </div>\n        </div>\n        <ul className='other-details-list'>\n          <li>\n            Pressure : <span>{`${resultData.main.pressure}`}</span>\n          </li>\n          <li>\n            Humidity : <span>{`${resultData.main.humidity}`}</span>\n          </li>\n          <li>\n            Visibility : <span>{`${resultData.visibility}`}</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherContainer;\n","import React from \"react\";\n\nimport CardHeader from \"../CardHeader/CardHeader\";\n\nimport \"./cordinates-container.css\";\n\nconst CordinatesContainer = (props) => {\n  return (\n    <div className='card cordinates-card'>\n      <CardHeader title='Cordinates' />\n      <div className='card-content'>\n        <ul className='other-details-list'>\n          <li>\n            Longitude: <span>{props.cordinates.lon}</span>\n          </li>\n          <li>\n            Latitude: <span>{props.cordinates.lat}</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default CordinatesContainer;\n","import React from \"react\";\nimport CardHeader from \"../CardHeader/CardHeader\";\nimport \"./wind-container.css\";\n\nconst WindContainer = (props) => {\n  return (\n    <div className='card wind-card'>\n      <CardHeader title='Wind' />\n      <div className='card-content'>\n        <ul className='other-details-list'>\n          <li>\n            Speed: <span>{props.wind.speed}</span>\n          </li>\n          <li>\n            Deg: <span>{props.wind.deg}</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default WindContainer;\n","import React from \"react\";\nimport \"./error.css\";\n\nconst Error = ({ error }) => {\n  return (\n    <div className='error-container'>\n      <h2>{error}</h2>\n    </div>\n  );\n};\n\nexport default Error;\n","import React, { useState } from \"react\";\nimport \"./main-container.css\";\nimport Form from \"../../Statefull/Form/Form\";\nimport WeatherContainer from \"../WeatherContainer/WeatherContainer\";\nimport CordinatesContainer from \"../CordinatesContainer/CordinatesContainer\";\nimport WindContainer from \"../WindContainer/WindContainer\";\nimport Error from \"../Error/Error\";\n\nconst MainContainer = () => {\n  const [result, setResult] = useState(null);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [error, seterror] = useState(null);\n  const [imgPath, setImgPath] = useState(null);\n  const [getResultPending, setgetResultPending] = useState(false);\n\n  const handleChange = (e) => {\n    let value = e.target.value || \"\";\n    setInputValue(value);\n  };\n\n  const getResult = async () => {\n    let imgPath = null;\n    setgetResultPending(true);\n    let api = `https://api.openweathermap.org/data/2.5/weather?q=${inputValue}&APPID=ff9ee543810318a7b86c44f55044b656&units=metric`;\n\n    let response = await fetch(api);\n    if (!response.ok) {\n      seterror(response.statusText);\n    } else {\n      let data = await response.json();\n      setResult(data);\n      let imageCode = data.weather[0].icon;\n      imgPath = `https://openweathermap.org/img/wn/${imageCode}@2x.png`;\n      setImgPath(imgPath);\n\n      seterror(null);\n      setInputValue(\"\");\n    }\n    setgetResultPending(false);\n  };\n\n  if (result) {\n    return (\n      <div className='main-container'>\n        {error ? <Error error={error} /> : false}\n        <Form\n          handleChange={handleChange}\n          inputValue={inputValue}\n          onSubmit={getResult}\n          getResultPending={getResultPending}\n        />\n        <WeatherContainer resultData={result} imgPath={imgPath} />\n        <div>\n          <CordinatesContainer cordinates={result.coord} />\n          <WindContainer wind={result.wind} />\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className='main-container'>\n        {error ? <Error error={error} /> : false}\n        <Form\n          handleChange={handleChange}\n          inputValue={inputValue}\n          onSubmit={getResult}\n        />\n      </div>\n    );\n  }\n};\n\nexport default MainContainer;\n","import \"./App.css\";\nimport MainContainer from \"./Components/Stateless/MainContainer/MainContainer\";\n\nfunction App() {\n  return <MainContainer />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}